<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AssertAll</name>
    </assembly>
    <members>
        <member name="T:AssertAll.AssertAll">
            <summary>
            Run all of your MSTest assert statements and have each failure message reported summarily.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.Execute">
            <summary>
            Executes all the Assert statements that have been registered for the current test. Not calling this method will cause tests to pass erroneously.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.AreEqual(System.Object,System.Object,System.String)">
            <summary>
            Tests whether the specified objects are equal and throws an exception if the two objects are not equal.Different numeric types are treated as unequal even if the logical values are equal. 42L is not equal to 42.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.AreNotEqual(System.Object,System.Object,System.String)">
            <summary>
            Tests whether the specified objects are unequal and throws an exception if the two objects are equal. Different numeric types are treated as unequal even if the logical values are equal. 42L is not equal to 42.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.AreSame(System.Object,System.Object,System.String)">
            <summary>
            Tests whether the specified objects both refer to the same object and throws an exception if the two inputs do not refer to the same object.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.AreNotSame(System.Object,System.Object,System.String)">
            <summary>
            Tests whether the specified objects refer to different objects and throws an exception if the two inputs refer to the same object.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.Fail(System.String)">
            <summary>
            Throws an AssertFailedException.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.Inconclusive(System.String)">
            <summary>
            Throws an AssertInconclusiveException.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.IsInstanceOfType(System.Object,System.Type,System.String)">
            <summary>
            Tests whether the specified object is an instance of the expected type and throws an exception if the expected type is not in the inheritance hierarchy of the object.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.IsNotInstanceOfType(System.Object,System.Type,System.String)">
            <summary>
            Tests whether the specified object is not an instance of the wrong type and throws an exception if the specified type is in the inheritance hierarchy of the object.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.IsNull(System.Object,System.String)">
            <summary>
            Tests whether the specified object is null and throws an exception if it is not.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.IsNotNull(System.Object,System.String)">
            <summary>
            Tests whether the specified object is non-null and throws an exception if it is null.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.IsTrue(System.Boolean,System.String)">
            <summary>
            Tests whether the specified condition is true and throws an exception if the condition is false.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.IsFalse(System.Boolean,System.String)">
            <summary>
            Tests whether the specified condition is false and throws an exception if the condition is true.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.ThrowsException``1(System.Action,System.String)">
            <summary>
            Tests whether the code specified by delegate action throws exact given exception of type T (and not of derived type) and throws AssertFailedException if code does not throws exception or throws exception of type other than T.
            </summary>
        </member>
        <member name="M:AssertAll.AssertAll.ThrowsExceptionAsync``1(System.Func{System.Threading.Tasks.Task},System.String)">
            <summary>
            Tests whether the code specified by delegate action throws exact given exception of type T (and not of derived type) and throws AssertFailedException if code does not throws exception or throws exception of type other than T.
            </summary>
        </member>
        <member name="P:AssertAll.AssertAll.That">
            <summary>
            Gets the singleton instance of the AssertAll functionality.
            </summary>
        </member>
        <member name="T:AssertAll.AssertAllTestMethodAttribute">
            <inheritdoc />
            <summary>
            The AssertAll test method attribute
            </summary>
        </member>
        <member name="M:AssertAll.AssertAllTestMethodAttribute.Execute(Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod)">
            <inheritdoc />
            <summary>
            Executes a test method
            </summary>
            <param name="testMethod"></param>
            <returns></returns>
        </member>
    </members>
</doc>
